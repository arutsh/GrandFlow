"""update donor mapping model

Revision ID: 63f8a0ec622c
Revises:
Create Date: 2025-09-27 15:27:52.555323

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "63f8a0ec622c"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Drop ngo_mappings first (it depends on donor_fields)
    op.drop_index(op.f("ix_ngo_mappings_donor_field_id"), table_name="ngo_mappings")
    op.drop_index(op.f("ix_ngo_mappings_id"), table_name="ngo_mappings")
    op.drop_index(op.f("ix_ngo_mappings_ngo_id"), table_name="ngo_mappings")
    op.drop_table("ngo_mappings")

    # Then drop donor_fields
    op.drop_index(op.f("ix_donor_fields_donor_template_id"), table_name="donor_fields")
    op.drop_index(op.f("ix_donor_fields_id"), table_name="donor_fields")
    op.drop_table("donor_fields")

    # Finally drop donor_templates
    op.drop_index(op.f("ix_donor_templates_id"), table_name="donor_templates")
    op.drop_table("donor_templates")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "donor_templates",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('donor_templates_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="donor_templates_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(op.f("ix_donor_templates_id"), "donor_templates", ["id"], unique=False)
    op.create_table(
        "ngo_mappings",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("ngo_id", sa.VARCHAR(length=64), autoincrement=False, nullable=False),
        sa.Column("ngo_field", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("donor_field_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "confidence", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["donor_field_id"],
            ["donor_fields.id"],
            name=op.f("ngo_mappings_donor_field_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("ngo_mappings_pkey")),
    )
    op.create_index(op.f("ix_ngo_mappings_ngo_id"), "ngo_mappings", ["ngo_id"], unique=False)
    op.create_index(op.f("ix_ngo_mappings_id"), "ngo_mappings", ["id"], unique=False)
    op.create_index(
        op.f("ix_ngo_mappings_donor_field_id"), "ngo_mappings", ["donor_field_id"], unique=False
    )
    op.create_table(
        "donor_fields",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("donor_template_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("field_name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["donor_template_id"],
            ["donor_templates.id"],
            name=op.f("donor_fields_donor_template_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("donor_fields_pkey")),
    )
    op.create_index(op.f("ix_donor_fields_id"), "donor_fields", ["id"], unique=False)
    op.create_index(
        op.f("ix_donor_fields_donor_template_id"),
        "donor_fields",
        ["donor_template_id"],
        unique=False,
    )
    # ### end Alembic commands ###
